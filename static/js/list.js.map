{"version":3,"sources":["list.js"],"names":["window","onload","filterMembers","vnode","input","options","fuse","Fuse","state","members","keys","threshold","tokenize","filteredMembers","search","MemberDetails","oninit","member","attrs","events","view","m","console","log","birthday","first_name","middle_name","last_name","postcode","city","address","address_no","email","phone_p","onclick","e","preventDefault","location","id","MembersList","q","selected","undefined","request","method","url","then","result","value","oninput","target","map","entry","mount","document","getElementById"],"mappings":"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","file":"list.js","sourceRoot":"../../frontend/src/members","sourcesContent":["window.onload = function() {\n    var filterMembers = function(vnode, input) {\n        if(input && input != '') {\n            var options = {\n                keys: ['0.first_name', '0.last_name', '0.email_1'],\n                threshold: 0.00,\n                tokenize: true,\n            };\n            var fuse = new Fuse(vnode.state.members, options);\n            vnode.state.filteredMembers = fuse.search(input);\n        } else {\n            vnode.state.filteredMembers = vnode.state.members;\n        }\n    }\n\n    var q = '';\n\n    var MemberDetails = {\n        oninit: function(vnode) {\n            vnode.state.member = vnode.attrs.member;\n            vnode.state.events = vnode.attrs.events;\n        },\n        view: function(vnode) {\n            let member = vnode.state.member;\n            let events = vnode.state.events;\n            return [\n                m('div.col-12', m('form#update-member',\n                    m('.form-row', [\n                        m('.col', [\n                            console.log(member.birthday),\n                            (member.birthday != '1970-01-01') ? m('label', member.first_name + ' ' + member.middle_name + ' ' + member.last_name + ', ' + member.birthday) : m('label', member.first_name + ' ' + member.middle_name + ' ' + member.last_name),\n                            //m('input[type=\"text\"][name=first_name].form-control[placeholder=\"First name\"]', { value: member.first_name })\n                        ]),\n                        /* m('.col', [\n                            m('label', member.middle_name),\n                            //m('input[type=\"text\"][name=middle_name].form-control[placeholder=\"Middle name\"]', { value: member.middle_name })\n                        ]),\n                        m('.col', [\n                            m('label', member.last_name),\n                            //m('input[type=\"text\"][name=last_name].form-control[placeholder=\"Last name\"]', { value: member.last_name })\n                        ]),\n                        m('.col', [\n                            m('label', member.birthday),\n                            //m('input[type=\"text\"][name=birthday].form-control[placeholder=\"Birthday\"]', { value: member.birthday })\n                        ]), */\n                    ]),\n                    m('.form-row', [\n                        /* m('.col', [\n                            m('label', 'Sex'),\n                            m('input[type=\"text\"][name=sex].form-control[placeholder=\"Sex\"]', { value: member.sex })\n                        ]),\n                        m('.col', [\n                            m('label', member.birthday),\n                            //m('input[type=\"text\"][name=birthday].form-control[placeholder=\"Birthday\"]', { value: member.birthday })\n                        ]), */\n                    ]),\n                    m('.form-row', [\n                        m('.col', [\n                            (member.postcode == '' && member.city == '' && member.address == '' && member.address_no == '') ? '' : m('label', member.postcode + ' ' + member.city + ', ' + member.address + ' ' + member.address_no),\n                            //m('input[type=\"text\"][name=address].form-control[placeholder=\"Address\"]', { value: member.address })\n                        ]),\n                        /* m('.col', [\n                            m('label', member.address_no),\n                            //m('input[type=\"text\"][name=address_no].form-control[placeholder=\"Address No\"]', { value: member.address_no })\n                        ]), */\n                    ]),\n                    m('.form-row', [\n                        /*m('.col', [\n                            m('label', member.postcode + ' ' + member.city),\n                            //m('input[type=\"text\"][name=postcode].form-control[placeholder=\"PLZ\"]', { value: member.postcode })\n                        ]),\n                        m('.col', [\n                            m('label', member.city),\n                            //m('input[type=\"text\"][name=city].form-control[placeholder=\"City\"]', { value: member.city })\n                        ]), */\n                    ]),\n                    m('.form-row', [\n                        m('.col', [\n                            (member.email != '' && member.phone_p != '') ? m('label', member.email + ' | ' + member.phone_p) : m('label', member.email + member.phone_p),\n                            \n                            //m('input[type=\"text\"][name=email].form-control[placeholder=\"Email\"]', { value: member.email })\n                        ]),\n                        /* m('.col', [\n                            m('label', member.phone_p),\n                            //m('input[type=\"text\"][name=phone_p].form-control[placeholder=\"Phone\"]', { value: member.phone_p })\n                        ]), */\n                    ]),\n                    /*m('.form-row', [\n                        m('.col', [\n                            m('label', 'Comment'),\n                            m('textarea[name=comment].form-control[placeholder=\"Comment\"]', { value: member.comment })\n                        ]),\n                    ]), */\n                    m('.form-row', [\n                        m('.col', [\n                            //m('button[type=\"submit\"].btn.btn-primary', {\n                            //    onclick: function(e) {\n                            //        e.preventDefault();\n                            //        updateMember(member);\n                            //    }\n                            //}, 'Save'),\n                            m('button[type=\"view\"].btn.btn-primary', {\n                                onclick: function(e) {\n                                    e.preventDefault();\n                                    window.location='/members/view/' + member.id;\n                                }\n                            }, 'Details'),\n                        ]),\n                    ]),\n                    m('.form-row', [\n                        m('.col', [\n                            m('.badge.badge-pill.badge-primary', ''),\n                        ]),\n                    ]),\n                    /* m('.form-row', [\n                        m('.col', [\n                            m(MemberEvents, { events: events })\n                        ]),\n                    ]), */\n                ))\n            ]\n        }\n    }\n\n    var MemberEvents = {\n        oninit: function(vnode) {\n            vnode.state.events = vnode.attrs.events;\n        },\n        view: function(vnode) {\n            let member = vnode.state.member;\n            let events = vnode.state.events;\n\n            let badges = []\n\n            let already_left = false\n            let current_grade = []\n            current_grade['Judo'] = false\n            current_grade['Jujitsu'] = false\n\n            events.forEach(function(event) {\n                if (event.event_type == 'Club' && event.division == 'Club' && event.class == 'Demotion') {\n                    badges.push({ type: 'danger', text: 'Left on ' + event.date })\n                    already_left = true\n                }\n\n                if (!already_left && event.event_type == 'Club' && event.division == 'Club' && event.class == 'Promotion') {\n                    badges.push({ type: 'success', text: 'Joined on ' + event.date })\n                }\n\n                if ((event.event_type.includes('Kyu') || event.event_type.includes('Dan')) && event.class == 'Promotion') {\n                    let grade = event.event_type.substring(event.event_type.length - 1)\n                              + '. '\n                              + event.event_type.substring(0, event.event_type.length - 1);\n\n                    current_grade[event.division] = { grade, date: event.date };\n                }\n            });\n\n            if(current_grade['Judo']) {\n                badges.push({ type: 'success', text: 'Promoted to ' + current_grade['Judo'].grade + ' on ' + current_grade['Judo'].date })\n            }\n            if(current_grade['Jujitsu']) {\n                badges.push({ type: 'success', text: 'Promoted to ' + current_grade['Jujitsu'].grade + ' on ' + current_grade['Jujitsu'].date })\n            }\n\n            return [\n                m('', badges.map(function(badge) {\n                    return m('span.badge.badge-pill.badge-' + badge.type , badge.text)\n                })),\n                m('table.table.table-hover.col-12', [\n                    m('thead', m('tr', [\n                            m('th', 'Event'),\n                            m('th', 'Division'),\n                            m('th', 'Class'),\n                            m('th', 'Date'),\n                            m('th', 'Comment'),\n                    ])),\n                    m('tbody', [\n                        [\n                            m('tr', [\n                                m('td[colspan=4]', 'Add new event'),\n                            ]),\n                        ],\n                        events.slice(0).reverse().map(function(event) {\n                            return [\n                                m('tr', [\n                                    m('td', event.event_type),\n                                    m('td', event.division),\n                                    m('td', event.class),\n                                    m('td', event.date),\n                                    m('td', event.comment),\n                                ]),\n                            ]\n                        })\n                    ])\n                ])\n            ]\n        }\n    }\n\n    var MembersList = {\n        oninit: function(vnode) {\n            vnode.state.q = '';\n            vnode.state.selected = undefined;\n\n            m.request({\n                method: 'GET',\n                url: \"/members/list_json\",\n            })\n            .then(function(result) {\n                vnode.state.members = result;\n                filterMembers(vnode, vnode.state.q);\n            })\n        },\n        view: function(vnode) {\n            return [\n                m('div.col-12', m('form',\n                    m('.form-group', [\n                        m('input[type=text].form-control[placeholder=\"Suche nach Vor- oder Nachname\"]', {\n                            value: vnode.state.q,\n                            oninput: function(e) {\n                                vnode.state.q = e.target.value;\n                                filterMembers(vnode, vnode.state.q);\n                            }\n                        })\n                    ])\n                )),\n                m('div.col-12', [\n                    m('table.table.table-hover.col-12', [\n                        m('thead', m('tr', [\n                                m('th', 'ID'),\n                                m('th', 'Vorname'),\n                                m('th', 'Nachname(n)'),\n                                m('th', 'E-Mail'),\n                                m('th', 'Geburtstag'),\n                        ])),\n                        m('tbody', [\n                            [\n                                m('tr', {\n                                    onclick: function() {\n                                        vnode.state.selected = 0;\n                                    },\n                                }, //[\n                                //    m('td[colspan=4]', 'Add new member'),\n                                //]),\n                                ),\n                                vnode.state.selected == 0 ? m('tr', [\n                                    m('td[colspan=4]', m(MemberDetails, { member: { id: 0 }, events: [] })),\n                                ]) : '',\n                            ],\n                            vnode.state.filteredMembers ? vnode.state.filteredMembers.map(function(entry) {\n                                let member = entry[0];\n                                let events = entry[1];\n                                \n                                return [\n                                    m('tr', {\n                                        onclick: function() {\n                                            if (vnode.state.selected != member.id) {\n                                                vnode.state.selected = member.id;\n                                            } else {\n                                                vnode.state.selected = undefined;\n                                            }\n                                        },\n                                    }, [\n                                        m('td', member.id),\n                                        m('td', member.first_name),\n                                        m('td', member.last_name),\n                                        m('td', member.email),\n                                        m('td', member.birthday),\n                                    ]),\n                                    vnode.state.selected == member.id ? m('tr', [\n                                        m('td[colspan=4]', m(MemberDetails, { member: member, events: events })),\n                                    ]) : '',\n                                ]\n                            }) : ''\n                        ])\n                    ])\n                ])\n            ]\n        }\n    }\n\n    m.mount(document.getElementById('mount'), MembersList)\n};"]}